<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:util="http://www.springframework.org/schema/util"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xsi:schemaLocation="http://www.springframework.org/schema/beans
								 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
								 http://www.springframework.org/schema/security
								 http://www.springframework.org/schema/security/spring-security.xsd
								 http://www.springframework.org/schema/util
								 http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath:security.properties"/>

	<beans:bean id="clientSsl" class="timely.configuration.ClientSsl">
		<beans:property name="trustStoreType" value="${trust.store.type}"/>
		<beans:property name="trustStoreFile" value="${trust.store.file}"/>
		<beans:property name="trustStorePassword" value="${trust.store.password}"/>
		<beans:property name="keyStoreType" value="${key.store.type}"/>
		<beans:property name="keyStoreFile" value="${key.store.file}"/>
		<beans:property name="keyStorePassword" value="${key.store.password}"/>
	</beans:bean>

	<beans:bean id="authorizationProperties" class="timely.configuration.AuthorizationProperties">
		<beans:property name="authorizationUrl" value="${authorization.url}"/>
		<beans:property name="publicCertificateType" value="${authorization.certificate.type}"/>
		<beans:property name="publicCertificateFile" value="${authorization.certificate.file}"/>
	</beans:bean>

	<beans:bean id="remoteUserDetailsService" class="timely.auth.RemoteUserDetailsService">
		<beans:constructor-arg ref="clientSsl"/>
		<beans:constructor-arg ref="authorizationProperties"/>
	</beans:bean>

	<beans:bean id="x509AuthorizationProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
		<beans:property name="preAuthenticatedUserDetailsService" ref="remoteUserDetailsService" />
	</beans:bean>

	<user-service id="usernamePasswordService">
		<user name="test" password="test1" authorities="A,B,C" />
	</user-service>

	<beans:bean id="noOpPasswordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>

	<beans:bean id="UserNamePasswordAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="usernamePasswordService"/>
		<beans:property name="passwordEncoder" ref="noOpPasswordEncoder"/>
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<!-- X509 PreAuthenticated authorization provider -->
		<authentication-provider ref="x509AuthorizationProvider"/>
		<!-- Basic authorization provider, validates provided username and password -->
		<authentication-provider ref="UserNamePasswordAuthenticationProvider" />
	</authentication-manager>

	<util:list id="requiredRoles" value-type="java.lang.String">
		<beans:value></beans:value>
	</util:list>

	<util:list id="requiredAuths" value-type="java.lang.String">
		<beans:value></beans:value>
	</util:list>
</beans:beans>