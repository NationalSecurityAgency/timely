{"version":3,"sources":["../../src/datasource/datasource.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAO,O;;AACA,a;;AACK,c;;;;;;;;;;;;;;;;;;;;;kCAEC,gB;;;;AAGX,kCAAY,gBAAZ,EAA8B,EAA9B,EAAkC,UAAlC,EAA8C,WAA9C,EAA2D,UAA3D,EAAuE;AAAA;;AACrE,eAAK,IAAL,GAAY,iBAAiB,IAA7B;AACA,eAAK,IAAL,GAAY,iBAAiB,IAA7B;;AAEA,eAAK,QAAL,GAAgB,iBAAiB,QAAjB,IAA6B,EAA7C;AACA,eAAK,SAAL,GAAiB,iBAAiB,QAAjB,CAA0B,SAA3C;AACA,eAAK,UAAL,GAAkB,iBAAiB,QAAjB,CAA0B,UAA5C;AACA,eAAK,MAAL,GAAc,iBAAiB,QAAjB,CAA0B,MAAxC;AACA,cAAI,CAAC,iBAAiB,QAAjB,CAA0B,UAA/B,EAA0C;AACxC,6BAAiB,QAAjB,CAA0B,UAA1B,GAAuC,KAAvC;AACD;;AAED,eAAK,GAAL,GAAW,KAAK,aAAL,EAAX;AACA,eAAK,eAAL,GAAuB,IAAvB;AACA,eAAK,SAAL,GAAiB,KAAjB;;AAEA,eAAK,cAAL,GAAsB,IAAtB;AACA,eAAK,OAAL,GAAe,EAAf;;AAEA,eAAK,EAAL,GAAU,EAAV;AACA,eAAK,UAAL,GAAkB,UAAlB;AACA,eAAK,WAAL,GAAmB,WAAnB;AACA,eAAK,UAAL,GAAkB,UAAlB;;AAEA,eAAK,kBAAL,GAA0B,IAA1B;AACA,eAAK,kBAAL,GAA0B,IAA1B;AAED;;;;;;;gCAGK,O,EAAQ;AACZ,gBAAI,QAAQ,KAAK,iBAAL,CAAuB,QAAQ,QAAR,CAAiB,IAAxC,EAA8C,KAA9C,CAAZ;AACA,gBAAI,MAAM,KAAK,iBAAL,CAAuB,QAAQ,QAAR,CAAiB,EAAxC,EAA4C,IAA5C,CAAV;AACA,gBAAI,KAAK,EAAT;;AAEA,cAAE,IAAF,CAAO,QAAQ,OAAf,EAAwB,UAAS,MAAT,EAAiB;AACvC,kBAAI,CAAC,OAAO,MAAZ,EAAoB;AAAE;AAAS;AAC/B,iBAAG,IAAH,CAAQ,KAAK,oBAAL,CAA0B,MAA1B,EAAkC,OAAlC,CAAR;AACD,aAHuB,CAGtB,IAHsB,CAGjB,IAHiB,CAAxB;;AAKA,gBAAI,UAAU,EAAE,OAAF,CAAU,EAAV,CAAd;;;AAGA,gBAAI,EAAE,OAAF,CAAU,OAAV,CAAJ,EAAwB;AACtB,kBAAI,IAAI,KAAK,EAAL,CAAQ,KAAR,EAAR;AACA,gBAAE,OAAF,CAAU,EAAE,MAAM,EAAR,EAAV;AACA,qBAAO,EAAE,OAAT;AACD;;AAED,gBAAI,cAAc,EAAlB;AACA,cAAE,IAAF,CAAO,OAAP,EAAgB,UAAS,KAAT,EAAgB;AAC9B,kBAAI,MAAM,OAAN,IAAiB,MAAM,OAAN,CAAc,MAAd,GAAuB,CAA5C,EAA+C;AAC7C,kBAAE,IAAF,CAAO,MAAM,OAAb,EAAsB,UAAS,GAAT,EAAc;AAClC,8BAAY,IAAI,IAAhB,IAAwB,IAAxB;AACD,iBAFD;AAGD,eAJD,MAIO;AACL,kBAAE,IAAF,CAAO,MAAM,IAAb,EAAmB,UAAS,GAAT,EAAc,GAAd,EAAmB;AACpC,8BAAY,GAAZ,IAAmB,IAAnB;AACD,iBAFD;AAGD;AACF,aAVD;;AAYA,mBAAO,KAAK,sBAAL,CAA4B,OAA5B,EAAqC,KAArC,EAA4C,GAA5C,EAAiD,IAAjD,CAAsD,UAAS,QAAT,EAAmB;AAC9E,kBAAI,wBAAwB,KAAK,mBAAL,CAAyB,SAAS,IAAlC,EAAwC,OAAxC,CAA5B;AACA,kBAAI,SAAS,EAAE,GAAF,CAAM,SAAS,IAAf,EAAqB,UAAS,UAAT,EAAqB,KAArB,EAA4B;AAC5D,wBAAQ,sBAAsB,KAAtB,CAAR;AACA,oBAAI,UAAU,CAAC,CAAf,EAAkB;AAChB,0BAAQ,CAAR;AACD;AACD,qBAAK,YAAL,CAAkB,UAAlB;;AAEA,uBAAO,KAAK,mBAAL,CAAyB,UAAzB,EAAqC,WAArC,EAAkD,QAAQ,OAAR,CAAgB,KAAhB,CAAlD,EAA0E,OAA1E,CAAP;AACD,eARiC,CAQhC,IARgC,CAQ3B,IAR2B,CAArB,CAAb;AASA,qBAAO,EAAE,MAAM,MAAR,EAAP;AACD,aAZ4D,CAY3D,IAZ2D,CAYtD,IAZsD,CAAtD,CAAP;AAaD;;;2CAGe;AACd,mBAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAkC;AACvC,mBAAK,KAAK,GAAL,GAAW,UADuB;AAEvC,sBAAQ;AAF+B,aAAlC,EAGJ,IAHI,CAGC,oBAAY;AAClB,kBAAI,SAAS,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAO,EAAE,QAAQ,SAAV,EAAqB,SAAS,wBAA9B,EAAwD,OAAO,SAA/D,EAAP;AACD;AACF,aAPM,CAAP;AAQD;;;0CAGe,O,EAAQ;AACtB,gBAAI,QAAQ,kBAAkB,QAAQ,QAAR,CAAiB,IAAnC,EAAyC,KAAzC,CAAZ;AACA,gBAAI,MAAM,kBAAkB,QAAQ,QAAR,CAAiB,EAAnC,EAAuC,IAAvC,CAAV;AACA,gBAAI,KAAK,EAAT;AACA,gBAAI,YAAY,EAAhB;;AAEA,eAAG,IAAH,CAAQ,EAAE,YAAW,KAAb,EAAoB,QAAO,QAAQ,UAAR,CAAmB,MAA9C,EAAR;;AAEA,gBAAI,UAAU,EAAE,OAAF,CAAU,EAAV,CAAd;;AAEA,mBAAO,KAAK,sBAAL,CAA4B,OAA5B,EAAqC,KAArC,EAA4C,GAA5C,EAAiD,IAAjD,CAAsD,UAAS,OAAT,EAAkB;AAC7E,kBAAG,QAAQ,IAAR,CAAa,CAAb,CAAH,EAAoB;AAClB,oBAAI,mBAAmB,QAAQ,IAAR,CAAa,CAAb,EAAgB,WAAvC;AACA,oBAAG,QAAQ,UAAR,CAAmB,QAAtB,EAA+B;AAC7B,qCAAmB,QAAQ,IAAR,CAAa,CAAb,EAAgB,iBAAnC;AACD;AACD,oBAAG,gBAAH,EAAqB;AACnB,oBAAE,IAAF,CAAO,gBAAP,EAAyB,UAAS,UAAT,EAAqB;AAC5C,wBAAI,QAAQ;AACV,6BAAO,WAAW,WADR;AAEV,4BAAM,KAAK,KAAL,CAAW,WAAW,SAAtB,IAAmC,IAF/B;AAGV,4BAAM,WAAW,KAHP;AAIV,kCAAY,QAAQ;AAJV,qBAAZ;;AAOA,8BAAU,IAAV,CAAe,KAAf;AACD,mBATD;AAUD;AACF;AACD,qBAAO,SAAP;AAED,aArB4D,CAqB3D,IArB2D,CAqBtD,IArBsD,CAAtD,CAAP;AAsBD;;;0CAGe,K,EAAO;AACrB,gBAAI,CAAC,KAAL,EAAY;AAAE,qBAAO,KAAK,EAAL,CAAQ,IAAR,CAAa,EAAb,CAAP;AAA0B;;AAExC,gBAAI,YAAJ;AACA,gBAAI;AACF,6BAAe,KAAK,WAAL,CAAiB,OAAjB,CAAyB,KAAzB,CAAf;AACD,aAFD,CAGA,OAAO,GAAP,EAAY;AACV,qBAAO,KAAK,EAAL,CAAQ,MAAR,CAAe,GAAf,CAAP;AACD;;AAED,gBAAI,oBAAoB,SAApB,iBAAoB,CAAS,MAAT,EAAiB;AACvC,qBAAO,EAAE,GAAF,CAAM,MAAN,EAAc,UAAS,KAAT,EAAgB;AACnC,uBAAO,EAAC,MAAM,KAAP,EAAP;AACD,eAFM,CAAP;AAGD,aAJD;;AAMA,gBAAI,gBAAgB,iBAApB;AACA,gBAAI,kBAAkB,mBAAtB;AACA,gBAAI,mBAAmB,6BAAvB;AACA,gBAAI,0BAA0B,sBAA9B;AACA,gBAAI,2BAA2B,sBAA/B;;AAEA,gBAAI,gBAAgB,aAAa,KAAb,CAAmB,aAAnB,CAApB;AACA,gBAAI,aAAJ,EAAmB;AACjB,qBAAO,KAAK,oBAAL,CAA0B,cAAc,CAAd,CAA1B,EAA4C,SAA5C,EAAuD,IAAvD,CAA4D,iBAA5D,CAAP;AACD;;AAED,gBAAI,kBAAkB,aAAa,KAAb,CAAmB,eAAnB,CAAtB;AACA,gBAAI,eAAJ,EAAqB;AACnB,qBAAO,KAAK,uBAAL,CAA6B,gBAAgB,CAAhB,CAA7B,EAAiD,IAAjD,CAAsD,iBAAtD,CAAP;AACD;;AAED,gBAAI,mBAAmB,aAAa,KAAb,CAAmB,gBAAnB,CAAvB;AACA,gBAAI,gBAAJ,EAAsB;AACpB,qBAAO,KAAK,4BAAL,CAAkC,iBAAiB,CAAjB,CAAlC,EAAuD,iBAAiB,CAAjB,CAAvD,EAA4E,IAA5E,CAAiF,iBAAjF,CAAP;AACD;;AAED,gBAAI,0BAA0B,aAAa,KAAb,CAAmB,uBAAnB,CAA9B;AACA,gBAAI,uBAAJ,EAA6B;AAC3B,qBAAO,KAAK,oBAAL,CAA0B,wBAAwB,CAAxB,CAA1B,EAAsD,MAAtD,EAA8D,IAA9D,CAAmE,iBAAnE,CAAP;AACD;;AAED,gBAAI,2BAA2B,aAAa,KAAb,CAAmB,wBAAnB,CAA/B;AACA,gBAAI,wBAAJ,EAA8B;AAC5B,qBAAO,KAAK,oBAAL,CAA0B,yBAAyB,CAAzB,CAA1B,EAAuD,MAAvD,EAA+D,IAA/D,CAAoE,iBAApE,CAAP;AACD;;AAED,mBAAO,KAAK,EAAL,CAAQ,IAAR,CAAa,EAAb,CAAP;AACD;;;iDAEsB,O,EAAS,K,EAAO,G,EAAI;AACzC,gBAAI,eAAe,IAAnB;;AAEA,gBAAI,UAAU;AACZ,qBAAO,KADK;AAEZ,uBAAS,OAFG;AAGZ,4BAAc,YAHF;AAIZ,iCAAmB,IAJP;AAKZ,yBAAW;AALC,aAAd;;;AASA,gBAAI,GAAJ,EAAS;AACP,sBAAQ,GAAR,GAAc,GAAd;AACD;;AAED,gBAAI,UAAU;AACZ,sBAAQ,MADI;AAEZ,mBAAK,KAAK,GAAL,GAAW,YAFJ;AAGZ,oBAAM;AAHM,aAAd;;AAMA,iBAAK,qBAAL,CAA2B,OAA3B;;;;AAIA,oBAAQ,OAAR,GAAkB,EAAE,gBAAgB,mCAAlB,EAAlB;;AAEA,mBAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAkC,OAAlC,CAAP;AACD;;;uCAEY,U,EAAY;AACvB,gBAAI,UAAU,OAAO,IAAP,CAAY,WAAW,IAAvB,CAAd;AACA,cAAE,IAAF,CAAO,WAAW,aAAlB,EAAiC,UAAS,GAAT,EAAc;AAC7C,sBAAQ,IAAR,CAAa,GAAb;AACD,aAFD;;AAIA,iBAAK,OAAL,CAAa,WAAW,MAAxB,IAAkC,OAAlC;AACD;;;yCAEc,M,EAAQ;AACrB,mBAAO,KAAK,EAAL,CAAQ,IAAR,CAAa,KAAK,OAAL,CAAa,MAAb,KAAwB,EAArC,CAAP;AACD;;;+CAEoB,K,EAAO,I,EAAM;AAChC,mBAAO,KAAK,IAAL,CAAU,cAAV,EAA0B,EAAC,MAAM,IAAP,EAAa,GAAG,KAAhB,EAAuB,KAAK,IAA5B,EAA1B,EAA6D,IAA7D,CAAkE,UAAS,MAAT,EAAiB;AACxF,qBAAO,OAAO,IAAd;AACD,aAFM,CAAP;AAGD;;;uDAE4B,M,EAAQ,I,EAAM;;AAEzC,gBAAG,CAAC,MAAD,IAAW,CAAC,IAAf,EAAqB;AACnB,qBAAO,GAAG,IAAH,CAAQ,EAAR,CAAP;AACD;;AAED,gBAAI,YAAY,KAAK,KAAL,CAAW,GAAX,EAAgB,GAAhB,CAAoB,UAAS,GAAT,EAAc;AAChD,qBAAO,IAAI,IAAJ,EAAP;AACD,aAFe,CAAhB;AAGA,gBAAI,MAAM,UAAU,CAAV,CAAV;AACA,gBAAI,YAAY,MAAM,IAAtB;;AAEA,gBAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B;AACxB,2BAAa,MAAM,UAAU,MAAV,CAAiB,CAAjB,EAAoB,IAApB,CAAyB,GAAzB,CAAnB;AACD;;AAED,gBAAI,IAAI,SAAS,GAAT,GAAe,SAAf,GAA2B,GAAnC;;AAEA,mBAAO,KAAK,IAAL,CAAU,oBAAV,EAAgC,EAAC,GAAG,CAAJ,EAAO,OAAO,IAAd,EAAhC,EAAqD,IAArD,CAA0D,UAAS,MAAT,EAAiB;AAChF,uBAAS,OAAO,IAAP,CAAY,OAArB;AACA,kBAAI,QAAQ,EAAZ;AACA,gBAAE,IAAF,CAAO,MAAP,EAAe,UAAS,CAAT,EAAY;AACzB,oBAAI,MAAM,OAAN,CAAc,EAAE,IAAF,CAAO,GAAP,CAAd,MAA+B,CAAC,CAApC,EAAuC;AACrC,wBAAM,IAAN,CAAW,EAAE,IAAF,CAAO,GAAP,CAAX;AACD;AACF,eAJD;AAKA,qBAAO,KAAP;AACD,aATM,CAAP;AAUD;;;kDAEuB,M,EAAQ;AAC9B,gBAAG,CAAC,MAAJ,EAAY;AAAE,qBAAO,KAAK,EAAL,CAAQ,IAAR,CAAa,EAAb,CAAP;AAA0B;;AAExC,mBAAO,KAAK,IAAL,CAAU,oBAAV,EAAgC,EAAC,GAAG,MAAJ,EAAY,OAAO,IAAnB,EAAhC,EAA0D,IAA1D,CAA+D,UAAS,MAAT,EAAiB;AACrF,uBAAS,OAAO,IAAP,CAAY,OAArB;AACA,kBAAI,QAAQ,EAAZ;AACA,gBAAE,IAAF,CAAO,MAAP,EAAe,UAAS,CAAT,EAAY;AACzB,kBAAE,IAAF,CAAO,EAAE,IAAT,EAAe,UAAS,IAAT,EAAe,IAAf,EAAqB;AAClC,sBAAG,MAAM,OAAN,CAAc,IAAd,MAAwB,CAAC,CAA5B,EAA+B;AAC7B,0BAAM,IAAN,CAAW,IAAX;AACD;AACF,iBAJD;AAKD,eAND;AAOA,qBAAO,KAAP;AACD,aAXM,CAAP;AAYD;;;+BAEI,W,EAAa,M,EAAQ;AACxB,gBAAI,UAAU;AACZ,sBAAQ,KADI;AAEZ,mBAAK,KAAK,GAAL,GAAW,WAFJ;AAGZ,sBAAQ;AAHI,aAAd;;AAMA,iBAAK,qBAAL,CAA2B,OAA3B;;AAEA,mBAAO,KAAK,UAAL,CAAgB,iBAAhB,CAAkC,OAAlC,CAAP;AACD;;;gDAEqB,O,EAAS;AAC7B,gBAAI,KAAK,SAAL,IAAkB,KAAK,eAA3B,EAA4C;AAC1C,sBAAQ,eAAR,GAA0B,IAA1B;AACD;AACD,gBAAI,KAAK,SAAT,EAAoB;AAClB,sBAAQ,OAAR,GAAkB,EAAC,iBAAiB,KAAK,SAAvB,EAAlB;AACD;AACF;;;2CAEe;AACd,gBAAI,KAAK,kBAAT,EAA6B;AAAE,qBAAO,KAAK,kBAAZ;AAAiC;;AAEhE,iBAAK,kBAAL,GAA0B,KAAK,IAAL,CAAU,kBAAV,EAA8B,IAA9B,CAAmC,UAAS,MAAT,EAAiB;AAC5E,kBAAI,OAAO,IAAP,IAAe,EAAE,OAAF,CAAU,OAAO,IAAjB,CAAnB,EAA2C;AACzC,uBAAO,OAAO,IAAP,CAAY,IAAZ,EAAP;AACD;AACD,qBAAO,EAAP;AACD,aALyB,CAA1B;AAMA,mBAAO,KAAK,kBAAZ;AACD;;;2CAEgB;AACf,gBAAI,KAAK,kBAAT,EAA6B;AAAE,qBAAO,KAAK,kBAAZ;AAAiC;;;AAGhE,iBAAK,kBAAL,GAA0B,KAAK,IAAL,CAAU,kBAAV,EAA8B,IAA9B,CAAmC,UAAS,MAAT,EAAiB;AAC5E,qBAAO,EAAP;AACD,aAFyB,CAA1B;AAGA,mBAAO,KAAK,kBAAZ;AACD;;;8CAEmB,E,EAAI,W,EAAa,M,EAAQ,O,EAAS;AACpD,gBAAI,cAAc,KAAK,iBAAL,CAAuB,EAAvB,EAA2B,MAA3B,EAAmC,WAAnC,EAAgD,OAAhD,CAAlB;AACA,gBAAI,MAAM,EAAV;;;;AAIA,cAAE,IAAF,CAAO,GAAG,GAAV,EAAe,UAAU,CAAV,EAAa,CAAb,EAAgB;AAC7B,kBAAI,IAAJ,CAAS,CAAC,CAAD,EAAI,IAAI,CAAR,CAAT;AACD,aAFD;;AAIA,mBAAO,EAAE,QAAQ,WAAV,EAAuB,YAAY,GAAnC,EAAP;AACD;;;4CAEiB,E,EAAI,M,EAAQ,W,EAAa,O,EAAS;AAClD,gBAAI,OAAO,KAAX,EAAkB;AAChB,kBAAI,aAAa,EAAE,KAAF,CAAQ,QAAQ,UAAR,IAAsB,EAA9B,CAAjB;AACA,gBAAE,IAAF,CAAO,GAAG,IAAV,EAAgB,UAAS,KAAT,EAAgB,GAAhB,EAAqB;AACnC,2BAAW,SAAS,GAApB,IAA2B,EAAC,OAAO,KAAR,EAA3B;AACD,eAFD;AAGA,qBAAO,KAAK,WAAL,CAAiB,OAAjB,CAAyB,OAAO,KAAhC,EAAuC,UAAvC,CAAP;AACD;;AAED,gBAAI,QAAQ,GAAG,MAAf;AACA,gBAAI,UAAU,EAAd;;AAEA,gBAAI,CAAC,EAAE,OAAF,CAAU,GAAG,IAAb,CAAL,EAAyB;AACvB,gBAAE,IAAF,CAAO,EAAE,KAAF,CAAQ,GAAG,IAAX,CAAP,EAAyB,UAAS,GAAT,EAAc;AACrC,oBAAI,EAAE,GAAF,CAAM,WAAN,EAAmB,IAAI,CAAJ,CAAnB,CAAJ,EAAgC;AAC9B,0BAAQ,IAAR,CAAa,IAAI,CAAJ,IAAS,GAAT,GAAe,IAAI,CAAJ,CAA5B;AACD;AACF,eAJD;AAKD;;AAED,gBAAI,CAAC,EAAE,OAAF,CAAU,OAAV,CAAL,EAAyB;AACvB,uBAAS,MAAM,QAAQ,IAAR,CAAa,IAAb,CAAN,GAA2B,GAApC;AACD;;AAED,mBAAO,KAAP;AACD;;;+CAEoB,M,EAAQ,O,EAAS;AACpC,gBAAI,CAAC,OAAO,MAAR,IAAkB,OAAO,IAA7B,EAAmC;AACjC,qBAAO,IAAP;AACD;;AAED,gBAAI,QAAQ;AACV,sBAAQ,KAAK,WAAL,CAAiB,OAAjB,CAAyB,OAAO,MAAhC,EAAwC,QAAQ,UAAhD,CADE;AAEV,0BAAY;AAFF,aAAZ;;AAKA,gBAAI,OAAO,UAAX,EAAuB;AACrB,oBAAM,UAAN,GAAmB,KAAK,WAAL,CAAiB,OAAjB,CAAyB,OAAO,UAAhC,CAAnB;AACD;;AAED,gBAAI,OAAO,iBAAX,EAA8B;AAC5B,oBAAM,IAAN,GAAa,IAAb;AACA,oBAAM,WAAN,GAAoB;AAClB,yBAAS,CAAC,CAAC,OAAO;AADA,eAApB;;AAIA,kBAAI,OAAO,UAAP,IAAqB,OAAO,UAAP,CAAkB,MAA3C,EAAmD;AACjD,sBAAM,WAAN,CAAkB,UAAlB,GAA+B,SAAS,OAAO,UAAhB,CAA/B;AACD;;AAED,kBAAI,OAAO,iBAAP,IAA4B,OAAO,iBAAP,CAAyB,MAAzD,EAAiE;AAC/D,sBAAM,WAAN,CAAkB,UAAlB,GAA+B,SAAS,OAAO,iBAAhB,CAA/B;AACD;AACF;;AAED,gBAAI,CAAC,OAAO,mBAAZ,EAAiC;AAC/B,kBAAI,WAAY,KAAK,WAAL,CAAiB,OAAjB,CAAyB,OAAO,kBAAP,IAA6B,QAAQ,QAA9D,CAAhB;;AAEA,kBAAI,SAAS,KAAT,CAAe,WAAf,CAAJ,EAAiC;AAC/B,2BAAW,WAAW,QAAX,IAAqB,IAArB,GAA4B,IAAvC;AACD;;AAED,oBAAM,UAAN,GAAmB,WAAW,GAAX,GAAiB,OAAO,oBAA3C;;AAEA,kBAAI,OAAO,oBAAP,IAA+B,OAAO,oBAAP,KAAgC,MAAnE,EAA2E;AACzE,sBAAM,UAAN,IAAoB,MAAM,OAAO,oBAAjC;AACD;AACF;;AAED,gBAAI,OAAO,OAAP,IAAkB,OAAO,OAAP,CAAe,MAAf,GAAwB,CAA9C,EAAiD;AAC/C,oBAAM,OAAN,GAAgB,QAAQ,IAAR,CAAa,OAAO,OAApB,CAAhB;AACA,kBAAG,MAAM,OAAT,EAAiB;AACf,qBAAI,IAAI,UAAR,IAAsB,MAAM,OAA5B,EAAoC;AAClC,wBAAM,OAAN,CAAc,UAAd,EAA0B,MAA1B,GAAmC,KAAK,WAAL,CAAiB,OAAjB,CAAyB,MAAM,OAAN,CAAc,UAAd,EAA0B,MAAnD,EAA2D,QAAQ,UAAnE,EAA+E,MAA/E,CAAnC;AACD;AACF;AACF,aAPD,MAOO;AACL,oBAAM,IAAN,GAAa,QAAQ,IAAR,CAAa,OAAO,IAApB,CAAb;AACA,kBAAG,MAAM,IAAT,EAAc;AACZ,qBAAI,IAAI,OAAR,IAAmB,MAAM,IAAzB,EAA8B;AAC5B,wBAAM,IAAN,CAAW,OAAX,IAAsB,KAAK,WAAL,CAAiB,OAAjB,CAAyB,MAAM,IAAN,CAAW,OAAX,CAAzB,EAA8C,QAAQ,UAAtD,EAAkE,MAAlE,CAAtB;AACD;AACF;AACF;;AAED,mBAAO,KAAP;AACD;;;8CAEmB,O,EAAS,O,EAAS;AACpC,gBAAI,oBAAJ;AACA,mBAAO,EAAE,GAAF,CAAM,OAAN,EAAe,UAAS,UAAT,EAAqB;AACzC,qBAAO,EAAE,SAAF,CAAY,QAAQ,OAApB,EAA6B,UAAS,MAAT,EAAiB;AACnD,oBAAI,OAAO,OAAP,IAAkB,OAAO,OAAP,CAAe,MAAf,GAAwB,CAA9C,EAAiD;AAC/C,yBAAO,OAAO,MAAP,KAAkB,WAAW,MAApC;AACD,iBAFD,MAEO;AACL,yBAAO,OAAO,MAAP,KAAkB,WAAW,MAA7B,IACP,EAAE,GAAF,CAAM,OAAO,IAAb,EACI,UAAS,IAAT,EAAe,IAAf,EAAqB;AACnB,2CAAuB,KAAK,WAAL,CAAiB,OAAjB,CAAyB,IAAzB,EAA+B,QAAQ,UAAvC,EAAmD,MAAnD,CAAvB;AACA,2BAAO,WAAW,IAAX,CAAgB,IAAhB,MAA0B,oBAA1B,IAAkD,yBAAyB,GAAlF;AACD,mBAHD,CAGE,IAHF,CAGO,IAHP,CADJ,CADA;AAMD;AACF,eAXmC,CAWlC,IAXkC,CAW7B,IAX6B,CAA7B,CAAP;AAYD,aAbqB,CAapB,IAboB,CAaf,IAbe,CAAf,CAAP;AAcD;;;4CAEiB,I,EAAM,O,EAAS;AAC/B,gBAAI,SAAS,KAAb,EAAoB;AAClB,qBAAO,IAAP;AACD;;AAED,mBAAO,SAAS,KAAT,CAAe,IAAf,EAAqB,OAArB,CAAP;AACA,mBAAO,KAAK,OAAL,EAAP;AACD;;;0CAEc;AACb,mBAAO,aAAa,KAAK,UAAlB,GAA+B,GAA/B,GAAqC,KAAK,SAAjD;AACD;;;uCAEW;AACV,mBAAO,UAAU,KAAK,UAAf,GAA4B,GAA5B,GAAkC,KAAK,MAA9C;AACD","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport angular from 'angular';\nimport * as dateMath from '../../../app/core/utils/datemath';\n\nexport class TimelyDatasource {\n\n  // arguments injected by angular\n  constructor(instanceSettings, $q, backendSrv, templateSrv, contextSrv) {\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n\n    this.jsonData = instanceSettings.jsonData || {};\n    this.httpsPort = instanceSettings.jsonData.httpsPort;\n    this.timelyHost = instanceSettings.jsonData.timelyHost;\n    this.wsPort = instanceSettings.jsonData.wsPort;\n    if( !instanceSettings.jsonData.basicAuths){\n      instanceSettings.jsonData.basicAuths = false;\n    }\n\n    this.url = this._makeHttpsUrl()\n    this.withCredentials = true;\n    this.basicAuth = false;\n\n    this.supportMetrics = true;\n    this.tagKeys = {};\n\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n\n    this.aggregatorsPromise = null;\n    this.filterTypesPromise = null;\n\n  }\n\n  // REQUIRED INTERFACE\n  query(options){\n    var start = this.convertToTSDBTime(options.rangeRaw.from, false);\n    var end = this.convertToTSDBTime(options.rangeRaw.to, true);\n    var qs = [];\n\n    _.each(options.targets, function(target) {\n      if (!target.metric) { return; }\n      qs.push(this.convertTargetToQuery(target, options));\n    }.bind(this) );\n\n    var queries = _.compact(qs);\n\n    // No valid targets, return the empty result to save a round trip.\n    if (_.isEmpty(queries)) {\n      var d = this.$q.defer();\n      d.resolve({ data: [] });\n      return d.promise;\n    }\n\n    var groupByTags = {};\n    _.each(queries, function(query) {\n      if (query.filters && query.filters.length > 0) {\n        _.each(query.filters, function(val) {\n          groupByTags[val.tagk] = true;\n        });\n      } else {\n        _.each(query.tags, function(val, key) {\n          groupByTags[key] = true;\n        });\n      }\n    });\n\n    return this.performTimeSeriesQuery(queries, start, end).then(function(response) {\n      var metricToTargetMapping = this.mapMetricsToTargets(response.data, options);\n      var result = _.map(response.data, function(metricData, index) {\n        index = metricToTargetMapping[index];\n        if (index === -1) {\n          index = 0;\n        }\n        this._saveTagKeys(metricData);\n\n        return this.transformMetricData(metricData, groupByTags, options.targets[index], options);\n      }.bind(this));\n      return { data: result };\n    }.bind(this));\n  }\n\n  // REQUIRED INTERFACE\n  testDatasource(){\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/version',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  // REQUIRED INTERFACE\n  annotationQuery(options){\n    var start = convertToTSDBTime(options.rangeRaw.from, false);\n    var end = convertToTSDBTime(options.rangeRaw.to, true);\n    var qs = [];\n    var eventList = [];\n\n    qs.push({ aggregator:\"sum\", metric:options.annotation.target });\n\n    var queries = _.compact(qs);\n\n    return this.performTimeSeriesQuery(queries, start, end).then(function(results) {\n      if(results.data[0]) {\n        var annotationObject = results.data[0].annotations;\n        if(options.annotation.isGlobal){\n          annotationObject = results.data[0].globalAnnotations;\n        }\n        if(annotationObject) {\n          _.each(annotationObject, function(annotation) {\n            var event = {\n              title: annotation.description,\n              time: Math.floor(annotation.startTime) * 1000,\n              text: annotation.notes,\n              annotation: options.annotation\n            };\n\n            eventList.push(event);\n          });\n        }\n      }\n      return eventList;\n\n    }.bind(this));\n  }\n\n  // REQUIRED INTERFACE\n  metricFindQuery(query) {\n    if (!query) { return this.$q.when([]); }\n\n    var interpolated;\n    try {\n      interpolated = this.templateSrv.replace(query);\n    }\n    catch (err) {\n      return this.$q.reject(err);\n    }\n\n    var responseTransform = function(result) {\n      return _.map(result, function(value) {\n        return {text: value};\n      });\n    };\n\n    var metrics_regex = /metrics\\((.*)\\)/;\n    var tag_names_regex = /tag_names\\((.*)\\)/;\n    var tag_values_regex = /tag_values\\((.*?),\\s?(.*)\\)/;\n    var tag_names_suggest_regex = /suggest_tagk\\((.*)\\)/;\n    var tag_values_suggest_regex = /suggest_tagv\\((.*)\\)/;\n\n    var metrics_query = interpolated.match(metrics_regex);\n    if (metrics_query) {\n      return this._performSuggestQuery(metrics_query[1], 'metrics').then(responseTransform);\n    }\n\n    var tag_names_query = interpolated.match(tag_names_regex);\n    if (tag_names_query) {\n      return this._performMetricKeyLookup(tag_names_query[1]).then(responseTransform);\n    }\n\n    var tag_values_query = interpolated.match(tag_values_regex);\n    if (tag_values_query) {\n      return this._performMetricKeyValueLookup(tag_values_query[1], tag_values_query[2]).then(responseTransform);\n    }\n\n    var tag_names_suggest_query = interpolated.match(tag_names_suggest_regex);\n    if (tag_names_suggest_query) {\n      return this._performSuggestQuery(tag_names_suggest_query[1], 'tagk').then(responseTransform);\n    }\n\n    var tag_values_suggest_query = interpolated.match(tag_values_suggest_regex);\n    if (tag_values_suggest_query) {\n      return this._performSuggestQuery(tag_values_suggest_query[1], 'tagv').then(responseTransform);\n    }\n\n    return this.$q.when([]);\n  }\n\n  performTimeSeriesQuery(queries, start, end){\n    var msResolution = true;\n\n    var reqBody = {\n      start: start,\n      queries: queries,\n      msResolution: msResolution,\n      globalAnnotations: true,\n      showQuery: true\n    };\n\n    // Relative queries (e.g. last hour) don't include an end time\n    if (end) {\n      reqBody.end = end;\n    }\n\n    var options = {\n      method: 'POST',\n      url: this.url + '/api/query',\n      data: reqBody\n    };\n\n    this._addCredentialOptions(options);\n\n    // In case the backend is 3rd-party hosted and does not suport OPTIONS, urlencoded requests\n    // go as POST rather than OPTIONS+POST\n    options.headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  _saveTagKeys(metricData) {\n    var tagKeys = Object.keys(metricData.tags);\n    _.each(metricData.aggregateTags, function(tag) {\n      tagKeys.push(tag);\n    });\n\n    this.tagKeys[metricData.metric] = tagKeys;\n  }\n\n  suggestTagKeys(metric) {\n    return this.$q.when(this.tagKeys[metric] || []);\n  }\n\n  _performSuggestQuery(query, type) {\n    return this._get('/api/suggest', {type: type, q: query, max: 1000}).then(function(result) {\n      return result.data;\n    });\n  }\n\n  _performMetricKeyValueLookup(metric, keys) {\n\n    if(!metric || !keys) {\n      return $q.when([]);\n    }\n\n    var keysArray = keys.split(\",\").map(function(key) {\n      return key.trim();\n    });\n    var key = keysArray[0];\n    var keysQuery = key + \"=*\";\n\n    if (keysArray.length > 1) {\n      keysQuery += \",\" + keysArray.splice(1).join(\",\");\n    }\n\n    var m = metric + \"{\" + keysQuery + \"}\";\n\n    return this._get('/api/search/lookup', {m: m, limit: 3000}).then(function(result) {\n      result = result.data.results;\n      var tagvs = [];\n      _.each(result, function(r) {\n        if (tagvs.indexOf(r.tags[key]) === -1) {\n          tagvs.push(r.tags[key]);\n        }\n      });\n      return tagvs;\n    });\n  }\n\n  _performMetricKeyLookup(metric) {\n    if(!metric) { return this.$q.when([]); }\n\n    return this._get('/api/search/lookup', {m: metric, limit: 1000}).then(function(result) {\n      result = result.data.results;\n      var tagks = [];\n      _.each(result, function(r) {\n        _.each(r.tags, function(tagv, tagk) {\n          if(tagks.indexOf(tagk) === -1) {\n            tagks.push(tagk);\n          }\n        });\n      });\n      return tagks;\n    });\n  }\n\n  _get(relativeUrl, params) {\n    var options = {\n      method: 'GET',\n      url: this.url + relativeUrl,\n      params: params,\n    };\n\n    this._addCredentialOptions(options);\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  _addCredentialOptions(options) {\n    if (this.basicAuth || this.withCredentials) {\n      options.withCredentials = true;\n    }\n    if (this.basicAuth) {\n      options.headers = {\"Authorization\": this.basicAuth};\n    }\n  }\n\n  getAggregators(){\n    if (this.aggregatorsPromise) { return this.aggregatorsPromise; }\n\n    this.aggregatorsPromise = this._get('/api/aggregators').then(function(result) {\n      if (result.data && _.isArray(result.data)) {\n        return result.data.sort();\n      }\n      return [];\n    });\n    return this.aggregatorsPromise;\n  }\n\n  getFilterTypes() {\n    if (this.filterTypesPromise) { return this.filterTypesPromise; }\n\n    // filters are for a newer opentsdb api version than Timely originally copied.\n    this.filterTypesPromise = this._get('/api/aggregators').then(function(result) {\n      return [];\n    });\n    return this.filterTypesPromise;\n  }\n\n  transformMetricData(md, groupByTags, target, options) {\n    var metricLabel = this.createMetricLabel(md, target, groupByTags, options);\n    var dps = [];\n\n    // TSDB returns datapoints has a hash of ts => value.\n    // Can't use _.pairs(invert()) because it stringifies keys/values\n    _.each(md.dps, function (v, k) {\n      dps.push([v, k * 1]);\n    });\n\n    return { target: metricLabel, datapoints: dps };\n  }\n\n  createMetricLabel(md, target, groupByTags, options) {\n    if (target.alias) {\n      var scopedVars = _.clone(options.scopedVars || {});\n      _.each(md.tags, function(value, key) {\n        scopedVars['tag_' + key] = {value: value};\n      });\n      return this.templateSrv.replace(target.alias, scopedVars);\n    }\n\n    var label = md.metric;\n    var tagData = [];\n\n    if (!_.isEmpty(md.tags)) {\n      _.each(_.pairs(md.tags), function(tag) {\n        if (_.has(groupByTags, tag[0])) {\n          tagData.push(tag[0] + \"=\" + tag[1]);\n        }\n      });\n    }\n\n    if (!_.isEmpty(tagData)) {\n      label += \"{\" + tagData.join(\", \") + \"}\";\n    }\n\n    return label;\n  }\n\n  convertTargetToQuery(target, options) {\n    if (!target.metric || target.hide) {\n      return null;\n    }\n\n    var query = {\n      metric: this.templateSrv.replace(target.metric, options.scopedVars),\n      aggregator: \"avg\"\n    };\n\n    if (target.aggregator) {\n      query.aggregator = this.templateSrv.replace(target.aggregator);\n    }\n\n    if (target.shouldComputeRate) {\n      query.rate = true;\n      query.rateOptions = {\n        counter: !!target.isCounter\n      };\n\n      if (target.counterMax && target.counterMax.length) {\n        query.rateOptions.counterMax = parseInt(target.counterMax);\n      }\n\n      if (target.counterResetValue && target.counterResetValue.length) {\n        query.rateOptions.resetValue = parseInt(target.counterResetValue);\n      }\n    }\n\n    if (!target.disableDownsampling) {\n      var interval =  this.templateSrv.replace(target.downsampleInterval || options.interval);\n\n      if (interval.match(/\\.[0-9]+s/)) {\n        interval = parseFloat(interval)*1000 + \"ms\";\n      }\n\n      query.downsample = interval + \"-\" + target.downsampleAggregator;\n\n      if (target.downsampleFillPolicy && target.downsampleFillPolicy !== \"none\") {\n        query.downsample += \"-\" + target.downsampleFillPolicy;\n      }\n    }\n\n    if (target.filters && target.filters.length > 0) {\n      query.filters = angular.copy(target.filters);\n      if(query.filters){\n        for(var filter_key in query.filters){\n          query.filters[filter_key].filter = this.templateSrv.replace(query.filters[filter_key].filter, options.scopedVars, 'pipe');\n        }\n      }\n    } else {\n      query.tags = angular.copy(target.tags);\n      if(query.tags){\n        for(var tag_key in query.tags){\n          query.tags[tag_key] = this.templateSrv.replace(query.tags[tag_key], options.scopedVars, 'pipe');\n        }\n      }\n    }\n\n    return query;\n  }\n\n  mapMetricsToTargets(metrics, options) {\n    var interpolatedTagValue;\n    return _.map(metrics, function(metricData) {\n      return _.findIndex(options.targets, function(target) {\n        if (target.filters && target.filters.length > 0) {\n          return target.metric === metricData.metric;\n        } else {\n          return target.metric === metricData.metric &&\n          _.all(target.tags,\n              function(tagV, tagK) {\n                interpolatedTagValue = this.templateSrv.replace(tagV, options.scopedVars, 'pipe');\n                return metricData.tags[tagK] === interpolatedTagValue || interpolatedTagValue === \"*\";\n              }.bind(this));\n        }\n      }.bind(this));\n    }.bind(this));\n  }\n\n  convertToTSDBTime(date, roundUp) {\n    if (date === 'now') {\n      return null;\n    }\n\n    date = dateMath.parse(date, roundUp);\n    return date.valueOf();\n  }\n\n  _makeHttpsUrl(){\n    return 'https://' + this.timelyHost + ':' + this.httpsPort\n  }\n\n  _makeWsUrl(){\n    return 'ws://' + this.timelyHost + ':' + this.wsPort\n  }\n\n}\n"]}